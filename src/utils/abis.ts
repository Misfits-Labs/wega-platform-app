// Generated by @wagmi/cli@1.3.0 on 11/27/2023 at 3:42:21 PM

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AccessControlUpgradeable
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const accessControlUpgradeableABI = [
 { type: "error", inputs: [], name: "AccessControlBadConfirmation" },
 {
  type: "error",
  inputs: [
   { name: "account", internalType: "address", type: "address" },
   { name: "neededRole", internalType: "bytes32", type: "bytes32" }
  ],
  name: "AccessControlUnauthorizedAccount"
 },
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "previousAdminRole", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "newAdminRole", internalType: "bytes32", type: "bytes32", indexed: true }
  ],
  name: "RoleAdminChanged"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleGranted"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleRevoked"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "role", internalType: "bytes32", type: "bytes32" }],
  name: "getRoleAdmin",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "grantRole",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "hasRole",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "callerConfirmation", internalType: "address", type: "address" }
  ],
  name: "renounceRole",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "revokeRole",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
  name: "supportsInterface",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Address
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const addressABI = [
 {
  type: "error",
  inputs: [{ name: "target", internalType: "address", type: "address" }],
  name: "AddressEmptyCode"
 },
 {
  type: "error",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "AddressInsufficientBalance"
 },
 { type: "error", inputs: [], name: "FailedInnerCall" }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ContextUpgradeable
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const contextUpgradeableABI = [
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC165Upgradeable
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc165UpgradeableABI = [
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
  name: "supportsInterface",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC1967Utils
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc1967UtilsABI = [
 {
  type: "error",
  inputs: [{ name: "admin", internalType: "address", type: "address" }],
  name: "ERC1967InvalidAdmin"
 },
 {
  type: "error",
  inputs: [{ name: "beacon", internalType: "address", type: "address" }],
  name: "ERC1967InvalidBeacon"
 },
 {
  type: "error",
  inputs: [{ name: "implementation", internalType: "address", type: "address" }],
  name: "ERC1967InvalidImplementation"
 },
 { type: "error", inputs: [], name: "ERC1967NonPayable" },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "previousAdmin", internalType: "address", type: "address", indexed: false },
   { name: "newAdmin", internalType: "address", type: "address", indexed: false }
  ],
  name: "AdminChanged"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "beacon", internalType: "address", type: "address", indexed: true }],
  name: "BeaconUpgraded"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "implementation", internalType: "address", type: "address", indexed: true }],
  name: "Upgraded"
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc20ABI = [
 {
  type: "error",
  inputs: [
   { name: "spender", internalType: "address", type: "address" },
   { name: "allowance", internalType: "uint256", type: "uint256" },
   { name: "needed", internalType: "uint256", type: "uint256" }
  ],
  name: "ERC20InsufficientAllowance"
 },
 {
  type: "error",
  inputs: [
   { name: "sender", internalType: "address", type: "address" },
   { name: "balance", internalType: "uint256", type: "uint256" },
   { name: "needed", internalType: "uint256", type: "uint256" }
  ],
  name: "ERC20InsufficientBalance"
 },
 {
  type: "error",
  inputs: [{ name: "approver", internalType: "address", type: "address" }],
  name: "ERC20InvalidApprover"
 },
 {
  type: "error",
  inputs: [{ name: "receiver", internalType: "address", type: "address" }],
  name: "ERC20InvalidReceiver"
 },
 {
  type: "error",
  inputs: [{ name: "sender", internalType: "address", type: "address" }],
  name: "ERC20InvalidSender"
 },
 {
  type: "error",
  inputs: [{ name: "spender", internalType: "address", type: "address" }],
  name: "ERC20InvalidSpender"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "owner", internalType: "address", type: "address", indexed: true },
   { name: "spender", internalType: "address", type: "address", indexed: true },
   { name: "value", internalType: "uint256", type: "uint256", indexed: false }
  ],
  name: "Approval"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "from", internalType: "address", type: "address", indexed: true },
   { name: "to", internalType: "address", type: "address", indexed: true },
   { name: "value", internalType: "uint256", type: "uint256", indexed: false }
  ],
  name: "Transfer"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "owner", internalType: "address", type: "address" },
   { name: "spender", internalType: "address", type: "address" }
  ],
  name: "allowance",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "spender", internalType: "address", type: "address" },
   { name: "value", internalType: "uint256", type: "uint256" }
  ],
  name: "approve",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "balanceOf",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "decimals",
  outputs: [{ name: "", internalType: "uint8", type: "uint8" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "name",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "symbol",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "totalSupply",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "to", internalType: "address", type: "address" },
   { name: "value", internalType: "uint256", type: "uint256" }
  ],
  name: "transfer",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "from", internalType: "address", type: "address" },
   { name: "to", internalType: "address", type: "address" },
   { name: "value", internalType: "uint256", type: "uint256" }
  ],
  name: "transferFrom",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC20Upgradeable
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc20UpgradeableABI = [
 {
  type: "error",
  inputs: [
   { name: "spender", internalType: "address", type: "address" },
   { name: "allowance", internalType: "uint256", type: "uint256" },
   { name: "needed", internalType: "uint256", type: "uint256" }
  ],
  name: "ERC20InsufficientAllowance"
 },
 {
  type: "error",
  inputs: [
   { name: "sender", internalType: "address", type: "address" },
   { name: "balance", internalType: "uint256", type: "uint256" },
   { name: "needed", internalType: "uint256", type: "uint256" }
  ],
  name: "ERC20InsufficientBalance"
 },
 {
  type: "error",
  inputs: [{ name: "approver", internalType: "address", type: "address" }],
  name: "ERC20InvalidApprover"
 },
 {
  type: "error",
  inputs: [{ name: "receiver", internalType: "address", type: "address" }],
  name: "ERC20InvalidReceiver"
 },
 {
  type: "error",
  inputs: [{ name: "sender", internalType: "address", type: "address" }],
  name: "ERC20InvalidSender"
 },
 {
  type: "error",
  inputs: [{ name: "spender", internalType: "address", type: "address" }],
  name: "ERC20InvalidSpender"
 },
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "owner", internalType: "address", type: "address", indexed: true },
   { name: "spender", internalType: "address", type: "address", indexed: true },
   { name: "value", internalType: "uint256", type: "uint256", indexed: false }
  ],
  name: "Approval"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "from", internalType: "address", type: "address", indexed: true },
   { name: "to", internalType: "address", type: "address", indexed: true },
   { name: "value", internalType: "uint256", type: "uint256", indexed: false }
  ],
  name: "Transfer"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "owner", internalType: "address", type: "address" },
   { name: "spender", internalType: "address", type: "address" }
  ],
  name: "allowance",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "spender", internalType: "address", type: "address" },
   { name: "value", internalType: "uint256", type: "uint256" }
  ],
  name: "approve",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "balanceOf",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "decimals",
  outputs: [{ name: "", internalType: "uint8", type: "uint8" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "name",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "symbol",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "totalSupply",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "to", internalType: "address", type: "address" },
   { name: "value", internalType: "uint256", type: "uint256" }
  ],
  name: "transfer",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "from", internalType: "address", type: "address" },
   { name: "to", internalType: "address", type: "address" },
   { name: "value", internalType: "uint256", type: "uint256" }
  ],
  name: "transferFrom",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EnumerableMap
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const enumerableMapABI = [
 {
  type: "error",
  inputs: [{ name: "key", internalType: "bytes32", type: "bytes32" }],
  name: "EnumerableMapNonexistentKey"
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FeeManager
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xe2cDC641b8AF26a208402a3e218EE022E954Afd0)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const feeManagerABI = [
 { type: "error", inputs: [], name: "AccessControlBadConfirmation" },
 {
  type: "error",
  inputs: [
   { name: "account", internalType: "address", type: "address" },
   { name: "neededRole", internalType: "bytes32", type: "bytes32" }
  ],
  name: "AccessControlUnauthorizedAccount"
 },
 {
  type: "error",
  inputs: [{ name: "target", internalType: "address", type: "address" }],
  name: "AddressEmptyCode"
 },
 {
  type: "error",
  inputs: [{ name: "implementation", internalType: "address", type: "address" }],
  name: "ERC1967InvalidImplementation"
 },
 { type: "error", inputs: [], name: "ERC1967NonPayable" },
 { type: "error", inputs: [], name: "FailedInnerCall" },
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "MathOverflowedMulDiv" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "error",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "OwnableInvalidOwner"
 },
 {
  type: "error",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "OwnableUnauthorizedAccount"
 },
 { type: "error", inputs: [], name: "UUPSUnauthorizedCallContext" },
 {
  type: "error",
  inputs: [{ name: "slot", internalType: "bytes32", type: "bytes32" }],
  name: "UUPSUnsupportedProxiableUUID"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "previousOwner", internalType: "address", type: "address", indexed: true },
   { name: "newOwner", internalType: "address", type: "address", indexed: true }
  ],
  name: "OwnershipTransferred"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "previousAdminRole", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "newAdminRole", internalType: "bytes32", type: "bytes32", indexed: true }
  ],
  name: "RoleAdminChanged"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleGranted"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleRevoked"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "feeApplier", internalType: "address", type: "address", indexed: true },
   { name: "feeTaker", internalType: "address", type: "address", indexed: true },
   { name: "feeShare", internalType: "uint256", type: "uint256", indexed: false }
  ],
  name: "SetFeeRule"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "implementation", internalType: "address", type: "address", indexed: true }],
  name: "Upgraded"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "UPGRADE_INTERFACE_VERSION",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "WEGA_PROTOCOL_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "", internalType: "address", type: "address" }],
  name: "_feeRules",
  outputs: [
   { name: "applier", internalType: "address", type: "address" },
   { name: "feeTaker", internalType: "address", type: "address" },
   { name: "feeShare", internalType: "uint256", type: "uint256" },
   { name: "shouldApply", internalType: "bool", type: "bool" }
  ]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "addWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "addWegaProtocolAdmins",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "applier", internalType: "address", type: "address" },
   { name: "transferAmount", internalType: "uint256", type: "uint256" }
  ],
  name: "calculateFeesForTransfer",
  outputs: [
   { name: "feeTaker", internalType: "address", type: "address" },
   { name: "feeAmount", internalType: "uint256", type: "uint256" },
   { name: "sendAmount", internalType: "uint256", type: "uint256" }
  ]
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "closeWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "applier", internalType: "address", type: "address" }],
  name: "getFeeRule",
  outputs: [
   {
    name: "feeRule",
    internalType: "struct IFeeManager.FeeConfig",
    type: "tuple",
    components: [
     { name: "applier", internalType: "address", type: "address" },
     { name: "feeTaker", internalType: "address", type: "address" },
     { name: "feeShare", internalType: "uint256", type: "uint256" },
     { name: "shouldApply", internalType: "bool", type: "bool" }
    ]
   }
  ]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "role", internalType: "bytes32", type: "bytes32" }],
  name: "getRoleAdmin",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "grantRole",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "hasRole",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 { stateMutability: "nonpayable", type: "function", inputs: [], name: "initialize", outputs: [] },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "isWegaProtocolAdmin",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "owner",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "proxiableUUID",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "removeWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "removeWegaProtocolAdmins",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceOwnership",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "callerConfirmation", internalType: "address", type: "address" }
  ],
  name: "renounceRole",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "revokeRole",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "rotateWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   {
    name: "configs",
    internalType: "struct IFeeManager.FeeConfig[]",
    type: "tuple[]",
    components: [
     { name: "applier", internalType: "address", type: "address" },
     { name: "feeTaker", internalType: "address", type: "address" },
     { name: "feeShare", internalType: "uint256", type: "uint256" },
     { name: "shouldApply", internalType: "bool", type: "bool" }
    ]
   }
  ],
  name: "setFeeConfigs",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "applier", internalType: "address", type: "address" }],
  name: "shouldApplyFees",
  outputs: [{ name: "shouldApply", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
  name: "supportsInterface",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
  name: "transferOwnership",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [
   { name: "newImplementation", internalType: "address", type: "address" },
   { name: "data", internalType: "bytes", type: "bytes" }
  ],
  name: "upgradeToAndCall",
  outputs: []
 }
] as const

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xe2cDC641b8AF26a208402a3e218EE022E954Afd0)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const feeManagerAddress = {
 1337: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
 80001: "0xe2cDC641b8AF26a208402a3e218EE022E954Afd0",
 344106930: "0x0000000000000000000000000000000000000000"
} as const

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xe2cDC641b8AF26a208402a3e218EE022E954Afd0)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const feeManagerConfig = { address: feeManagerAddress, abi: feeManagerABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IAccessControl
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iAccessControlABI = [
 { type: "error", inputs: [], name: "AccessControlBadConfirmation" },
 {
  type: "error",
  inputs: [
   { name: "account", internalType: "address", type: "address" },
   { name: "neededRole", internalType: "bytes32", type: "bytes32" }
  ],
  name: "AccessControlUnauthorizedAccount"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "previousAdminRole", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "newAdminRole", internalType: "bytes32", type: "bytes32", indexed: true }
  ],
  name: "RoleAdminChanged"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleGranted"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleRevoked"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "role", internalType: "bytes32", type: "bytes32" }],
  name: "getRoleAdmin",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "grantRole",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "hasRole",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "callerConfirmation", internalType: "address", type: "address" }
  ],
  name: "renounceRole",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "revokeRole",
  outputs: []
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBeacon
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iBeaconABI = [
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "implementation",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC1155Errors
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc1155ErrorsABI = [
 {
  type: "error",
  inputs: [
   { name: "sender", internalType: "address", type: "address" },
   { name: "balance", internalType: "uint256", type: "uint256" },
   { name: "needed", internalType: "uint256", type: "uint256" },
   { name: "tokenId", internalType: "uint256", type: "uint256" }
  ],
  name: "ERC1155InsufficientBalance"
 },
 {
  type: "error",
  inputs: [{ name: "approver", internalType: "address", type: "address" }],
  name: "ERC1155InvalidApprover"
 },
 {
  type: "error",
  inputs: [
   { name: "idsLength", internalType: "uint256", type: "uint256" },
   { name: "valuesLength", internalType: "uint256", type: "uint256" }
  ],
  name: "ERC1155InvalidArrayLength"
 },
 {
  type: "error",
  inputs: [{ name: "operator", internalType: "address", type: "address" }],
  name: "ERC1155InvalidOperator"
 },
 {
  type: "error",
  inputs: [{ name: "receiver", internalType: "address", type: "address" }],
  name: "ERC1155InvalidReceiver"
 },
 {
  type: "error",
  inputs: [{ name: "sender", internalType: "address", type: "address" }],
  name: "ERC1155InvalidSender"
 },
 {
  type: "error",
  inputs: [
   { name: "operator", internalType: "address", type: "address" },
   { name: "owner", internalType: "address", type: "address" }
  ],
  name: "ERC1155MissingApprovalForAll"
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC165
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc165ABI = [
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
  name: "supportsInterface",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC1822Proxiable
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc1822ProxiableABI = [
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "proxiableUUID",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc20ABI = [
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "owner", internalType: "address", type: "address", indexed: true },
   { name: "spender", internalType: "address", type: "address", indexed: true },
   { name: "value", internalType: "uint256", type: "uint256", indexed: false }
  ],
  name: "Approval"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "from", internalType: "address", type: "address", indexed: true },
   { name: "to", internalType: "address", type: "address", indexed: true },
   { name: "value", internalType: "uint256", type: "uint256", indexed: false }
  ],
  name: "Transfer"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "owner", internalType: "address", type: "address" },
   { name: "spender", internalType: "address", type: "address" }
  ],
  name: "allowance",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "spender", internalType: "address", type: "address" },
   { name: "value", internalType: "uint256", type: "uint256" }
  ],
  name: "approve",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "balanceOf",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "totalSupply",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "to", internalType: "address", type: "address" },
   { name: "value", internalType: "uint256", type: "uint256" }
  ],
  name: "transfer",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "from", internalType: "address", type: "address" },
   { name: "to", internalType: "address", type: "address" },
   { name: "value", internalType: "uint256", type: "uint256" }
  ],
  name: "transferFrom",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC20Errors
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc20ErrorsABI = [
 {
  type: "error",
  inputs: [
   { name: "spender", internalType: "address", type: "address" },
   { name: "allowance", internalType: "uint256", type: "uint256" },
   { name: "needed", internalType: "uint256", type: "uint256" }
  ],
  name: "ERC20InsufficientAllowance"
 },
 {
  type: "error",
  inputs: [
   { name: "sender", internalType: "address", type: "address" },
   { name: "balance", internalType: "uint256", type: "uint256" },
   { name: "needed", internalType: "uint256", type: "uint256" }
  ],
  name: "ERC20InsufficientBalance"
 },
 {
  type: "error",
  inputs: [{ name: "approver", internalType: "address", type: "address" }],
  name: "ERC20InvalidApprover"
 },
 {
  type: "error",
  inputs: [{ name: "receiver", internalType: "address", type: "address" }],
  name: "ERC20InvalidReceiver"
 },
 {
  type: "error",
  inputs: [{ name: "sender", internalType: "address", type: "address" }],
  name: "ERC20InvalidSender"
 },
 {
  type: "error",
  inputs: [{ name: "spender", internalType: "address", type: "address" }],
  name: "ERC20InvalidSpender"
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC20EscrowEvents
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc20EscrowEventsABI = [
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "areFeesApplied", internalType: "bool", type: "bool", indexed: true }],
  name: "ApplyFees"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "feeManager", internalType: "address", type: "address", indexed: true }],
  name: "SetFeeManager"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "gameController", internalType: "address", type: "address", indexed: true }],
  name: "SetGameControler"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "escrowId", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "withdrawers", internalType: "address[]", type: "address[]", indexed: true }
  ],
  name: "SetWithdrawers"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "escrowId", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "wager", internalType: "uint256", type: "uint256", indexed: true },
   { name: "player", internalType: "address", type: "address", indexed: true }
  ],
  name: "WagerDeposit"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "escrowId", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "token", internalType: "address", type: "address", indexed: true },
   { name: "creator", internalType: "address", type: "address", indexed: true },
   { name: "wager", internalType: "uint256", type: "uint256", indexed: false }
  ],
  name: "WagerRequestCreation"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "transferAmount", internalType: "uint256", type: "uint256", indexed: true },
   { name: "winner", internalType: "address", type: "address", indexed: true }
  ],
  name: "WagerWithdrawal"
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC20Metadata
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc20MetadataABI = [
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "owner", internalType: "address", type: "address", indexed: true },
   { name: "spender", internalType: "address", type: "address", indexed: true },
   { name: "value", internalType: "uint256", type: "uint256", indexed: false }
  ],
  name: "Approval"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "from", internalType: "address", type: "address", indexed: true },
   { name: "to", internalType: "address", type: "address", indexed: true },
   { name: "value", internalType: "uint256", type: "uint256", indexed: false }
  ],
  name: "Transfer"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "owner", internalType: "address", type: "address" },
   { name: "spender", internalType: "address", type: "address" }
  ],
  name: "allowance",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "spender", internalType: "address", type: "address" },
   { name: "value", internalType: "uint256", type: "uint256" }
  ],
  name: "approve",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "balanceOf",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "decimals",
  outputs: [{ name: "", internalType: "uint8", type: "uint8" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "name",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "symbol",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "totalSupply",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "to", internalType: "address", type: "address" },
   { name: "value", internalType: "uint256", type: "uint256" }
  ],
  name: "transfer",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "from", internalType: "address", type: "address" },
   { name: "to", internalType: "address", type: "address" },
   { name: "value", internalType: "uint256", type: "uint256" }
  ],
  name: "transferFrom",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC721Errors
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc721ErrorsABI = [
 {
  type: "error",
  inputs: [
   { name: "sender", internalType: "address", type: "address" },
   { name: "tokenId", internalType: "uint256", type: "uint256" },
   { name: "owner", internalType: "address", type: "address" }
  ],
  name: "ERC721IncorrectOwner"
 },
 {
  type: "error",
  inputs: [
   { name: "operator", internalType: "address", type: "address" },
   { name: "tokenId", internalType: "uint256", type: "uint256" }
  ],
  name: "ERC721InsufficientApproval"
 },
 {
  type: "error",
  inputs: [{ name: "approver", internalType: "address", type: "address" }],
  name: "ERC721InvalidApprover"
 },
 {
  type: "error",
  inputs: [{ name: "operator", internalType: "address", type: "address" }],
  name: "ERC721InvalidOperator"
 },
 {
  type: "error",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "ERC721InvalidOwner"
 },
 {
  type: "error",
  inputs: [{ name: "receiver", internalType: "address", type: "address" }],
  name: "ERC721InvalidReceiver"
 },
 {
  type: "error",
  inputs: [{ name: "sender", internalType: "address", type: "address" }],
  name: "ERC721InvalidSender"
 },
 {
  type: "error",
  inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
  name: "ERC721NonexistentToken"
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IFeeManager
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iFeeManagerABI = [
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "applier", internalType: "address", type: "address" },
   { name: "transferAmount", internalType: "uint256", type: "uint256" }
  ],
  name: "calculateFeesForTransfer",
  outputs: [
   { name: "feeTaker", internalType: "address", type: "address" },
   { name: "feeAmount", internalType: "uint256", type: "uint256" },
   { name: "sendAmount", internalType: "uint256", type: "uint256" }
  ]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "applier", internalType: "address", type: "address" }],
  name: "getFeeRule",
  outputs: [
   {
    name: "feeRule",
    internalType: "struct IFeeManager.FeeConfig",
    type: "tuple",
    components: [
     { name: "applier", internalType: "address", type: "address" },
     { name: "feeTaker", internalType: "address", type: "address" },
     { name: "feeShare", internalType: "uint256", type: "uint256" },
     { name: "shouldApply", internalType: "bool", type: "bool" }
    ]
   }
  ]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   {
    name: "configs",
    internalType: "struct IFeeManager.FeeConfig[]",
    type: "tuple[]",
    components: [
     { name: "applier", internalType: "address", type: "address" },
     { name: "feeTaker", internalType: "address", type: "address" },
     { name: "feeShare", internalType: "uint256", type: "uint256" },
     { name: "shouldApply", internalType: "bool", type: "bool" }
    ]
   }
  ],
  name: "setFeeConfigs",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "applier", internalType: "address", type: "address" }],
  name: "shouldApplyFees",
  outputs: [{ name: "shouldApply", internalType: "bool", type: "bool" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IFeeManagerEvents
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iFeeManagerEventsABI = [
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "feeApplier", internalType: "address", type: "address", indexed: true },
   { name: "feeTaker", internalType: "address", type: "address", indexed: true },
   { name: "feeShare", internalType: "uint256", type: "uint256", indexed: false }
  ],
  name: "SetFeeRule"
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IWega
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iWegaABI = [
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "currentPlayers", internalType: "address[]", type: "address[]" },
   { name: "playerChoises", internalType: "uint256[]", type: "uint256[]" },
   { name: "denominator", internalType: "uint256", type: "uint256" },
   { name: "minRounds", internalType: "uint256", type: "uint256" }
  ],
  name: "play",
  outputs: [{ name: "winners", internalType: "address[]", type: "address[]" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "currentPlayers", internalType: "address[]", type: "address[]" },
   { name: "denominator", internalType: "uint256", type: "uint256" },
   { name: "minRounds", internalType: "uint256", type: "uint256" }
  ],
  name: "play",
  outputs: [{ name: "winners", internalType: "address[]", type: "address[]" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "player", internalType: "address", type: "address" }
  ],
  name: "playerResults",
  outputs: [{ name: "", internalType: "uint256[]", type: "uint256[]" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "player", internalType: "address", type: "address" }
  ],
  name: "playerScore",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "randomNumbersContract",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "escrowHash", internalType: "bytes32", type: "bytes32" }],
  name: "winners",
  outputs: [{ name: "", internalType: "address[]", type: "address[]" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IWegaCoinFlipGame
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iWegaCoinFlipGameABI = [
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "currentPlayers", internalType: "address[]", type: "address[]" },
   { name: "playerChoises", internalType: "uint256[]", type: "uint256[]" },
   { name: "denominator", internalType: "uint256", type: "uint256" },
   { name: "minRounds", internalType: "uint256", type: "uint256" }
  ],
  name: "play",
  outputs: [{ name: "winners", internalType: "address[]", type: "address[]" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IWegaDiceGame
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iWegaDiceGameABI = [
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "currentPlayers", internalType: "address[]", type: "address[]" },
   { name: "denominator", internalType: "uint256", type: "uint256" },
   { name: "minRounds", internalType: "uint256", type: "uint256" }
  ],
  name: "play",
  outputs: [{ name: "winners", internalType: "address[]", type: "address[]" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IWegaERC20Escrow
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iWegaErc20EscrowABI = [
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "player", internalType: "address", type: "address" }
  ],
  name: "containsPlayer",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "token", internalType: "address", type: "address" },
   { name: "creator", internalType: "address", type: "address" },
   { name: "requiredAccountNum", internalType: "uint256", type: "uint256" },
   { name: "wagerAmount", internalType: "uint256", type: "uint256" }
  ],
  name: "createWagerRequest",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" },
   { name: "amount", internalType: "uint256", type: "uint256" }
  ],
  name: "deposit",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "depositOf",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "escrowHash", internalType: "bytes32", type: "bytes32" }],
  name: "getWagerRequest",
  outputs: [
   {
    name: "",
    internalType: "struct IEscrow.ERC20WagerRequest",
    type: "tuple",
    components: [
     { name: "state", internalType: "enum IEscrow.TransactionState", type: "uint8" },
     { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
     { name: "wagerAmount", internalType: "uint256", type: "uint256" },
     { name: "tokenAddress", internalType: "address", type: "address" },
     { name: "totalWager", internalType: "uint256", type: "uint256" },
     { name: "nonce", internalType: "uint256", type: "uint256" }
    ]
   }
  ]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "getWagerRequests",
  outputs: [
   {
    name: "",
    internalType: "struct IEscrow.ERC20WagerRequest[]",
    type: "tuple[]",
    components: [
     { name: "state", internalType: "enum IEscrow.TransactionState", type: "uint8" },
     { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
     { name: "wagerAmount", internalType: "uint256", type: "uint256" },
     { name: "tokenAddress", internalType: "address", type: "address" },
     { name: "totalWager", internalType: "uint256", type: "uint256" },
     { name: "nonce", internalType: "uint256", type: "uint256" }
    ]
   }
  ]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "token", internalType: "address", type: "address" },
   { name: "creator", internalType: "address", type: "address" },
   { name: "requiredAccountNum", internalType: "uint256", type: "uint256" },
   { name: "wagerAmount", internalType: "uint256", type: "uint256" },
   { name: "nonce", internalType: "uint256", type: "uint256" }
  ],
  name: "hash",
  outputs: [{ name: "escrowHash_", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "feeManager", internalType: "address", type: "address" }],
  name: "setFeeManager",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "winners", internalType: "address[]", type: "address[]" }
  ],
  name: "setWithdrawers",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "escrowHash", internalType: "bytes32", type: "bytes32" }],
  name: "wagerBalance",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IWegaGameController
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iWegaGameControllerABI = [
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "name", internalType: "string", type: "string" },
   { name: "tokenAddress", internalType: "address", type: "address" },
   { name: "wagerAmount", internalType: "uint256", type: "uint256" },
   { name: "randomNumbers", internalType: "uint256[]", type: "uint256[]" }
  ],
  name: "createGame",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "randomNumbers", internalType: "uint256[]", type: "uint256[]" }
  ],
  name: "depositOrPlay",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "playerChoices", internalType: "uint256[]", type: "uint256[]" },
   { name: "randomNumbers", internalType: "uint256[]", type: "uint256[]" }
  ],
  name: "depositOrPlay",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "game", internalType: "string", type: "string" }],
  name: "existsGame",
  outputs: [{ name: "exists", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "game", internalType: "string", type: "string" },
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "player", internalType: "address", type: "address" }
  ],
  name: "gameResults",
  outputs: [{ name: "", internalType: "uint256[]", type: "uint256[]" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "escrowHash", internalType: "bytes32", type: "bytes32" }],
  name: "getGame",
  outputs: [
   {
    name: "",
    internalType: "struct IWega.Wega",
    type: "tuple",
    components: [
     { name: "name", internalType: "string", type: "string" },
     { name: "currentPlayers", internalType: "address[]", type: "address[]" },
     { name: "deposited", internalType: "uint256", type: "uint256" },
     { name: "state", internalType: "enum IWega.WegaState", type: "uint8" }
    ]
   }
  ]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "game", internalType: "string", type: "string" },
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "player", internalType: "address", type: "address" }
  ],
  name: "playerScore",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "escrowHash", internalType: "bytes32", type: "bytes32" }],
  name: "players",
  outputs: [{ name: "", internalType: "address[]", type: "address[]" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   {
    name: "config",
    internalType: "struct IWegaGameController.GameSettings",
    type: "tuple",
    components: [
     { name: "denominator", internalType: "uint256", type: "uint256" },
     { name: "minRounds", internalType: "uint256", type: "uint256" },
     { name: "requiredPlayers", internalType: "uint256", type: "uint256" },
     { name: "proxy", internalType: "address", type: "address" },
     { name: "randomNumberController", internalType: "address", type: "address" },
     { name: "name", internalType: "string", type: "string" }
    ]
   }
  ],
  name: "registerGame",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "game", internalType: "string", type: "string" }],
  name: "removeGame",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   {
    name: "config",
    internalType: "struct IWegaGameController.GameSettings",
    type: "tuple",
    components: [
     { name: "denominator", internalType: "uint256", type: "uint256" },
     { name: "minRounds", internalType: "uint256", type: "uint256" },
     { name: "requiredPlayers", internalType: "uint256", type: "uint256" },
     { name: "proxy", internalType: "address", type: "address" },
     { name: "randomNumberController", internalType: "address", type: "address" },
     { name: "name", internalType: "string", type: "string" }
    ]
   }
  ],
  name: "setGameConfiguration",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "game", internalType: "string", type: "string" },
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" }
  ],
  name: "winners",
  outputs: [{ name: "", internalType: "address[]", type: "address[]" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IWegaGameControllerEvents
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iWegaGameControllerEventsABI = [
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "nonce", internalType: "uint256", type: "uint256", indexed: true },
   { name: "creator", internalType: "address", type: "address", indexed: false },
   { name: "name", internalType: "string", type: "string", indexed: false }
  ],
  name: "GameCreation"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "name", internalType: "string", type: "string", indexed: false },
   { name: "gameAddress", internalType: "address", type: "address", indexed: false }
  ],
  name: "GameRegistration"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "name", internalType: "string", type: "string", indexed: false },
   { name: "denominator", internalType: "uint256", type: "uint256", indexed: false },
   { name: "minRounds", internalType: "uint256", type: "uint256", indexed: false },
   { name: "requiredPlayers", internalType: "uint256", type: "uint256", indexed: false },
   { name: "proxy", internalType: "address", type: "address", indexed: false },
   { name: "randomNumberController", internalType: "address", type: "address", indexed: false }
  ],
  name: "SetGame"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "winners", internalType: "address[]", type: "address[]", indexed: true }
  ],
  name: "WinnerDeclaration"
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IWegaRandomizer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iWegaRandomizerABI = [
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "randomNumbersCount",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "retrieve",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "randomNumbers", internalType: "uint256[]", type: "uint256[]" }],
  name: "seed",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "useOwnerNonce",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IWegaRandomizerController
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iWegaRandomizerControllerABI = [
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "newRandomizer", internalType: "address", type: "address", indexed: true }],
  name: "RandomizerSet"
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "denominator", internalType: "uint256", type: "uint256" }],
  name: "generate",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "incrementControllerNonce",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "randomNumbers", internalType: "uint256[]", type: "uint256[]" }],
  name: "seedRandomizer",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "newRandomizer", internalType: "address", type: "address" }],
  name: "setRandomizer",
  outputs: []
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IWegaRandomizerControllerEvents
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iWegaRandomizerControllerEventsABI = [
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "newRandomizer", internalType: "address", type: "address", indexed: true }],
  name: "RandomizerSet"
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Initializable
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const initializableABI = [
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Math
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const mathABI = [{ type: "error", inputs: [], name: "MathOverflowedMulDiv" }] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Nonces
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const noncesABI = [
 {
  type: "error",
  inputs: [
   { name: "account", internalType: "address", type: "address" },
   { name: "currentNonce", internalType: "uint256", type: "uint256" }
  ],
  name: "InvalidAccountNonce"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "nonces",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Ownable
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ownableABI = [
 {
  type: "error",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "OwnableInvalidOwner"
 },
 {
  type: "error",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "OwnableUnauthorizedAccount"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "previousOwner", internalType: "address", type: "address", indexed: true },
   { name: "newOwner", internalType: "address", type: "address", indexed: true }
  ],
  name: "OwnershipTransferred"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "owner",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceOwnership",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
  name: "transferOwnership",
  outputs: []
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// OwnableUpgradeable
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ownableUpgradeableABI = [
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "error",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "OwnableInvalidOwner"
 },
 {
  type: "error",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "OwnableUnauthorizedAccount"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "previousOwner", internalType: "address", type: "address", indexed: true },
   { name: "newOwner", internalType: "address", type: "address", indexed: true }
  ],
  name: "OwnershipTransferred"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "owner",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceOwnership",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
  name: "transferOwnership",
  outputs: []
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ReentrancyGuard
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const reentrancyGuardABI = [
 { type: "error", inputs: [], name: "ReentrancyGuardReentrantCall" }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ReentrancyGuardUpgradeable
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const reentrancyGuardUpgradeableABI = [
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 { type: "error", inputs: [], name: "ReentrancyGuardReentrantCall" },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// UUPSUpgradeable
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const uupsUpgradeableABI = [
 {
  type: "error",
  inputs: [{ name: "target", internalType: "address", type: "address" }],
  name: "AddressEmptyCode"
 },
 {
  type: "error",
  inputs: [{ name: "implementation", internalType: "address", type: "address" }],
  name: "ERC1967InvalidImplementation"
 },
 { type: "error", inputs: [], name: "ERC1967NonPayable" },
 { type: "error", inputs: [], name: "FailedInnerCall" },
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 { type: "error", inputs: [], name: "UUPSUnauthorizedCallContext" },
 {
  type: "error",
  inputs: [{ name: "slot", internalType: "bytes32", type: "bytes32" }],
  name: "UUPSUnsupportedProxiableUUID"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "implementation", internalType: "address", type: "address", indexed: true }],
  name: "Upgraded"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "UPGRADE_INTERFACE_VERSION",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "proxiableUUID",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [
   { name: "newImplementation", internalType: "address", type: "address" },
   { name: "data", internalType: "bytes", type: "bytes" }
  ],
  name: "upgradeToAndCall",
  outputs: []
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Wega
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const wegaABI = [
 { type: "error", inputs: [], name: "AccessControlBadConfirmation" },
 {
  type: "error",
  inputs: [
   { name: "account", internalType: "address", type: "address" },
   { name: "neededRole", internalType: "bytes32", type: "bytes32" }
  ],
  name: "AccessControlUnauthorizedAccount"
 },
 {
  type: "error",
  inputs: [{ name: "target", internalType: "address", type: "address" }],
  name: "AddressEmptyCode"
 },
 {
  type: "error",
  inputs: [{ name: "implementation", internalType: "address", type: "address" }],
  name: "ERC1967InvalidImplementation"
 },
 { type: "error", inputs: [], name: "ERC1967NonPayable" },
 { type: "error", inputs: [], name: "FailedInnerCall" },
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "error",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "OwnableInvalidOwner"
 },
 {
  type: "error",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "OwnableUnauthorizedAccount"
 },
 { type: "error", inputs: [], name: "UUPSUnauthorizedCallContext" },
 {
  type: "error",
  inputs: [{ name: "slot", internalType: "bytes32", type: "bytes32" }],
  name: "UUPSUnsupportedProxiableUUID"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "previousOwner", internalType: "address", type: "address", indexed: true },
   { name: "newOwner", internalType: "address", type: "address", indexed: true }
  ],
  name: "OwnershipTransferred"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "previousAdminRole", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "newAdminRole", internalType: "bytes32", type: "bytes32", indexed: true }
  ],
  name: "RoleAdminChanged"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleGranted"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleRevoked"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "implementation", internalType: "address", type: "address", indexed: true }],
  name: "Upgraded"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "GAME_CONTROLLER_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "UPGRADE_INTERFACE_VERSION",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "WEGA_PROTOCOL_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "randomNumberController", internalType: "address", type: "address" }],
  name: "__Wega_init",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "randomNumberController", internalType: "address", type: "address" }],
  name: "__Wega_init_unchained",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "addWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "addWegaProtocolAdmins",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "closeWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "role", internalType: "bytes32", type: "bytes32" }],
  name: "getRoleAdmin",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "grantRole",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "hasRole",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "randomNumberController", internalType: "address", type: "address" }],
  name: "initialize",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "isWegaProtocolAdmin",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "owner",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "currentPlayers", internalType: "address[]", type: "address[]" },
   { name: "playerChoises", internalType: "uint256[]", type: "uint256[]" },
   { name: "currentRound", internalType: "uint256", type: "uint256" },
   { name: "minRounds", internalType: "uint256", type: "uint256" }
  ],
  name: "play",
  outputs: [{ name: "winners_", internalType: "address[]", type: "address[]" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "currentPlayers", internalType: "address[]", type: "address[]" },
   { name: "currentRound", internalType: "uint256", type: "uint256" },
   { name: "minRounds", internalType: "uint256", type: "uint256" }
  ],
  name: "play",
  outputs: [{ name: "winners_", internalType: "address[]", type: "address[]" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "player", internalType: "address", type: "address" }
  ],
  name: "playerResults",
  outputs: [{ name: "", internalType: "uint256[]", type: "uint256[]" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "player", internalType: "address", type: "address" }
  ],
  name: "playerScore",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "proxiableUUID",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "randomNumbersContract",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "removeWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "removeWegaProtocolAdmins",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceOwnership",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "callerConfirmation", internalType: "address", type: "address" }
  ],
  name: "renounceRole",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "revokeRole",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "rotateWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
  name: "supportsInterface",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
  name: "transferOwnership",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [
   { name: "newImplementation", internalType: "address", type: "address" },
   { name: "data", internalType: "bytes", type: "bytes" }
  ],
  name: "upgradeToAndCall",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "escrowHash", internalType: "bytes32", type: "bytes32" }],
  name: "winners",
  outputs: [{ name: "", internalType: "address[]", type: "address[]" }]
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WegaCoinFlipGame
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x24133b29067AC3858B4F58112bCAC243941538c8)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaCoinFlipGameABI = [
 { type: "error", inputs: [], name: "AccessControlBadConfirmation" },
 {
  type: "error",
  inputs: [
   { name: "account", internalType: "address", type: "address" },
   { name: "neededRole", internalType: "bytes32", type: "bytes32" }
  ],
  name: "AccessControlUnauthorizedAccount"
 },
 {
  type: "error",
  inputs: [{ name: "target", internalType: "address", type: "address" }],
  name: "AddressEmptyCode"
 },
 {
  type: "error",
  inputs: [{ name: "implementation", internalType: "address", type: "address" }],
  name: "ERC1967InvalidImplementation"
 },
 { type: "error", inputs: [], name: "ERC1967NonPayable" },
 { type: "error", inputs: [], name: "FailedInnerCall" },
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "error",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "OwnableInvalidOwner"
 },
 {
  type: "error",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "OwnableUnauthorizedAccount"
 },
 { type: "error", inputs: [], name: "UUPSUnauthorizedCallContext" },
 {
  type: "error",
  inputs: [{ name: "slot", internalType: "bytes32", type: "bytes32" }],
  name: "UUPSUnsupportedProxiableUUID"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "previousOwner", internalType: "address", type: "address", indexed: true },
   { name: "newOwner", internalType: "address", type: "address", indexed: true }
  ],
  name: "OwnershipTransferred"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "previousAdminRole", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "newAdminRole", internalType: "bytes32", type: "bytes32", indexed: true }
  ],
  name: "RoleAdminChanged"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleGranted"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleRevoked"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "implementation", internalType: "address", type: "address", indexed: true }],
  name: "Upgraded"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "GAME_CONTROLLER_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "UPGRADE_INTERFACE_VERSION",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "WEGA_PROTOCOL_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "randomNumberController", internalType: "address", type: "address" }],
  name: "__Wega_init",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "randomNumberController", internalType: "address", type: "address" }],
  name: "__Wega_init_unchained",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "addWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "addWegaProtocolAdmins",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "closeWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "role", internalType: "bytes32", type: "bytes32" }],
  name: "getRoleAdmin",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "grantRole",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "hasRole",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "randomNumberController", internalType: "address", type: "address" }],
  name: "initialize",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "isWegaProtocolAdmin",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "owner",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "currentPlayers", internalType: "address[]", type: "address[]" },
   { name: "playerChoices", internalType: "uint256[]", type: "uint256[]" },
   { name: "denominator", internalType: "uint256", type: "uint256" },
   { name: "minRounds", internalType: "uint256", type: "uint256" }
  ],
  name: "play",
  outputs: [{ name: "winners", internalType: "address[]", type: "address[]" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "currentPlayers", internalType: "address[]", type: "address[]" },
   { name: "currentRound", internalType: "uint256", type: "uint256" },
   { name: "minRounds", internalType: "uint256", type: "uint256" }
  ],
  name: "play",
  outputs: [{ name: "winners_", internalType: "address[]", type: "address[]" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "player", internalType: "address", type: "address" }
  ],
  name: "playerResults",
  outputs: [{ name: "", internalType: "uint256[]", type: "uint256[]" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "player", internalType: "address", type: "address" }
  ],
  name: "playerScore",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "proxiableUUID",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "randomNumbersContract",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "removeWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "removeWegaProtocolAdmins",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceOwnership",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "callerConfirmation", internalType: "address", type: "address" }
  ],
  name: "renounceRole",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "revokeRole",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "rotateWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
  name: "supportsInterface",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
  name: "transferOwnership",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [
   { name: "newImplementation", internalType: "address", type: "address" },
   { name: "data", internalType: "bytes", type: "bytes" }
  ],
  name: "upgradeToAndCall",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "escrowHash", internalType: "bytes32", type: "bytes32" }],
  name: "winners",
  outputs: [{ name: "", internalType: "address[]", type: "address[]" }]
 }
] as const

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x24133b29067AC3858B4F58112bCAC243941538c8)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaCoinFlipGameAddress = {
 1337: "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
 80001: "0x24133b29067AC3858B4F58112bCAC243941538c8",
 344106930: "0x0000000000000000000000000000000000000000"
} as const

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x24133b29067AC3858B4F58112bCAC243941538c8)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaCoinFlipGameConfig = {
 address: wegaCoinFlipGameAddress,
 abi: wegaCoinFlipGameABI
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WegaDiceGame
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x5581147651B29D44d4eD95099F1a53aAE052f797)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaDiceGameABI = [
 { type: "error", inputs: [], name: "AccessControlBadConfirmation" },
 {
  type: "error",
  inputs: [
   { name: "account", internalType: "address", type: "address" },
   { name: "neededRole", internalType: "bytes32", type: "bytes32" }
  ],
  name: "AccessControlUnauthorizedAccount"
 },
 {
  type: "error",
  inputs: [{ name: "target", internalType: "address", type: "address" }],
  name: "AddressEmptyCode"
 },
 {
  type: "error",
  inputs: [{ name: "implementation", internalType: "address", type: "address" }],
  name: "ERC1967InvalidImplementation"
 },
 { type: "error", inputs: [], name: "ERC1967NonPayable" },
 { type: "error", inputs: [], name: "FailedInnerCall" },
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "error",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "OwnableInvalidOwner"
 },
 {
  type: "error",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "OwnableUnauthorizedAccount"
 },
 { type: "error", inputs: [], name: "UUPSUnauthorizedCallContext" },
 {
  type: "error",
  inputs: [{ name: "slot", internalType: "bytes32", type: "bytes32" }],
  name: "UUPSUnsupportedProxiableUUID"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "previousOwner", internalType: "address", type: "address", indexed: true },
   { name: "newOwner", internalType: "address", type: "address", indexed: true }
  ],
  name: "OwnershipTransferred"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "previousAdminRole", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "newAdminRole", internalType: "bytes32", type: "bytes32", indexed: true }
  ],
  name: "RoleAdminChanged"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleGranted"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleRevoked"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "implementation", internalType: "address", type: "address", indexed: true }],
  name: "Upgraded"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "GAME_CONTROLLER_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "UPGRADE_INTERFACE_VERSION",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "WEGA_PROTOCOL_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "randomNumberController", internalType: "address", type: "address" }],
  name: "__Wega_init",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "randomNumberController", internalType: "address", type: "address" }],
  name: "__Wega_init_unchained",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "addWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "addWegaProtocolAdmins",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "closeWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "role", internalType: "bytes32", type: "bytes32" }],
  name: "getRoleAdmin",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "grantRole",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "hasRole",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "randomNumberController", internalType: "address", type: "address" }],
  name: "initialize",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "isWegaProtocolAdmin",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "owner",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "currentPlayers", internalType: "address[]", type: "address[]" },
   { name: "playerChoises", internalType: "uint256[]", type: "uint256[]" },
   { name: "currentRound", internalType: "uint256", type: "uint256" },
   { name: "minRounds", internalType: "uint256", type: "uint256" }
  ],
  name: "play",
  outputs: [{ name: "winners_", internalType: "address[]", type: "address[]" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "currentPlayers", internalType: "address[]", type: "address[]" },
   { name: "denominator", internalType: "uint256", type: "uint256" },
   { name: "minRounds", internalType: "uint256", type: "uint256" }
  ],
  name: "play",
  outputs: [{ name: "winners", internalType: "address[]", type: "address[]" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "player", internalType: "address", type: "address" }
  ],
  name: "playerResults",
  outputs: [{ name: "", internalType: "uint256[]", type: "uint256[]" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "player", internalType: "address", type: "address" }
  ],
  name: "playerScore",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "proxiableUUID",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "randomNumbersContract",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "removeWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "removeWegaProtocolAdmins",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceOwnership",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "callerConfirmation", internalType: "address", type: "address" }
  ],
  name: "renounceRole",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "revokeRole",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "rotateWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
  name: "supportsInterface",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
  name: "transferOwnership",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [
   { name: "newImplementation", internalType: "address", type: "address" },
   { name: "data", internalType: "bytes", type: "bytes" }
  ],
  name: "upgradeToAndCall",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "escrowHash", internalType: "bytes32", type: "bytes32" }],
  name: "winners",
  outputs: [{ name: "", internalType: "address[]", type: "address[]" }]
 }
] as const

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x5581147651B29D44d4eD95099F1a53aAE052f797)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaDiceGameAddress = {
 1337: "0x9A676e781A523b5d0C0e43731313A708CB607508",
 80001: "0x5581147651B29D44d4eD95099F1a53aAE052f797",
 344106930: "0x0000000000000000000000000000000000000000"
} as const

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x5581147651B29D44d4eD95099F1a53aAE052f797)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaDiceGameConfig = { address: wegaDiceGameAddress, abi: wegaDiceGameABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WegaERC20Dummy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x802361100a4772847DBc29BC59F76FD1F186E002)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaErc20DummyABI = [
 {
  stateMutability: "nonpayable",
  type: "constructor",
  inputs: [{ name: "receivers", internalType: "address[]", type: "address[]" }]
 },
 {
  type: "error",
  inputs: [
   { name: "spender", internalType: "address", type: "address" },
   { name: "allowance", internalType: "uint256", type: "uint256" },
   { name: "needed", internalType: "uint256", type: "uint256" }
  ],
  name: "ERC20InsufficientAllowance"
 },
 {
  type: "error",
  inputs: [
   { name: "sender", internalType: "address", type: "address" },
   { name: "balance", internalType: "uint256", type: "uint256" },
   { name: "needed", internalType: "uint256", type: "uint256" }
  ],
  name: "ERC20InsufficientBalance"
 },
 {
  type: "error",
  inputs: [{ name: "approver", internalType: "address", type: "address" }],
  name: "ERC20InvalidApprover"
 },
 {
  type: "error",
  inputs: [{ name: "receiver", internalType: "address", type: "address" }],
  name: "ERC20InvalidReceiver"
 },
 {
  type: "error",
  inputs: [{ name: "sender", internalType: "address", type: "address" }],
  name: "ERC20InvalidSender"
 },
 {
  type: "error",
  inputs: [{ name: "spender", internalType: "address", type: "address" }],
  name: "ERC20InvalidSpender"
 },
 {
  type: "error",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "OwnableInvalidOwner"
 },
 {
  type: "error",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "OwnableUnauthorizedAccount"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "owner", internalType: "address", type: "address", indexed: true },
   { name: "spender", internalType: "address", type: "address", indexed: true },
   { name: "value", internalType: "uint256", type: "uint256", indexed: false }
  ],
  name: "Approval"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "previousOwner", internalType: "address", type: "address", indexed: true },
   { name: "newOwner", internalType: "address", type: "address", indexed: true }
  ],
  name: "OwnershipTransferred"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "from", internalType: "address", type: "address", indexed: true },
   { name: "to", internalType: "address", type: "address", indexed: true },
   { name: "value", internalType: "uint256", type: "uint256", indexed: false }
  ],
  name: "Transfer"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "owner", internalType: "address", type: "address" },
   { name: "spender", internalType: "address", type: "address" }
  ],
  name: "allowance",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "spender", internalType: "address", type: "address" },
   { name: "value", internalType: "uint256", type: "uint256" }
  ],
  name: "approve",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "balanceOf",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "decimals",
  outputs: [{ name: "", internalType: "uint8", type: "uint8" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "to", internalType: "address", type: "address" },
   { name: "amount", internalType: "uint256", type: "uint256" }
  ],
  name: "mint",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "name",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "owner",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceOwnership",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "symbol",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "totalSupply",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "to", internalType: "address", type: "address" },
   { name: "value", internalType: "uint256", type: "uint256" }
  ],
  name: "transfer",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "from", internalType: "address", type: "address" },
   { name: "to", internalType: "address", type: "address" },
   { name: "value", internalType: "uint256", type: "uint256" }
  ],
  name: "transferFrom",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
  name: "transferOwnership",
  outputs: []
 }
] as const

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x802361100a4772847DBc29BC59F76FD1F186E002)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaErc20DummyAddress = {
 1337: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
 80001: "0x802361100a4772847DBc29BC59F76FD1F186E002",
 344106930: "0x0000000000000000000000000000000000000000"
} as const

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x802361100a4772847DBc29BC59F76FD1F186E002)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaErc20DummyConfig = {
 address: wegaErc20DummyAddress,
 abi: wegaErc20DummyABI
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WegaERC20Escrow
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xCEBc6b24362cA2F4fA625d340BeF8Af4F91DB5bB)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaErc20EscrowABI = [
 { type: "error", inputs: [], name: "AccessControlBadConfirmation" },
 {
  type: "error",
  inputs: [
   { name: "account", internalType: "address", type: "address" },
   { name: "neededRole", internalType: "bytes32", type: "bytes32" }
  ],
  name: "AccessControlUnauthorizedAccount"
 },
 {
  type: "error",
  inputs: [{ name: "target", internalType: "address", type: "address" }],
  name: "AddressEmptyCode"
 },
 {
  type: "error",
  inputs: [{ name: "implementation", internalType: "address", type: "address" }],
  name: "ERC1967InvalidImplementation"
 },
 { type: "error", inputs: [], name: "ERC1967NonPayable" },
 { type: "error", inputs: [], name: "FailedInnerCall" },
 {
  type: "error",
  inputs: [
   { name: "account", internalType: "address", type: "address" },
   { name: "currentNonce", internalType: "uint256", type: "uint256" }
  ],
  name: "InvalidAccountNonce"
 },
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "MathOverflowedMulDiv" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "error",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "OwnableInvalidOwner"
 },
 {
  type: "error",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "OwnableUnauthorizedAccount"
 },
 { type: "error", inputs: [], name: "ReentrancyGuardReentrantCall" },
 { type: "error", inputs: [], name: "UUPSUnauthorizedCallContext" },
 {
  type: "error",
  inputs: [{ name: "slot", internalType: "bytes32", type: "bytes32" }],
  name: "UUPSUnsupportedProxiableUUID"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "areFeesApplied", internalType: "bool", type: "bool", indexed: true }],
  name: "ApplyFees"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "previousOwner", internalType: "address", type: "address", indexed: true },
   { name: "newOwner", internalType: "address", type: "address", indexed: true }
  ],
  name: "OwnershipTransferred"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "previousAdminRole", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "newAdminRole", internalType: "bytes32", type: "bytes32", indexed: true }
  ],
  name: "RoleAdminChanged"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleGranted"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleRevoked"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "feeManager", internalType: "address", type: "address", indexed: true }],
  name: "SetFeeManager"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "gameController", internalType: "address", type: "address", indexed: true }],
  name: "SetGameControler"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "escrowId", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "withdrawers", internalType: "address[]", type: "address[]", indexed: true }
  ],
  name: "SetWithdrawers"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "implementation", internalType: "address", type: "address", indexed: true }],
  name: "Upgraded"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "escrowId", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "wager", internalType: "uint256", type: "uint256", indexed: true },
   { name: "player", internalType: "address", type: "address", indexed: true }
  ],
  name: "WagerDeposit"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "escrowId", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "token", internalType: "address", type: "address", indexed: true },
   { name: "creator", internalType: "address", type: "address", indexed: true },
   { name: "wager", internalType: "uint256", type: "uint256", indexed: false }
  ],
  name: "WagerRequestCreation"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "transferAmount", internalType: "uint256", type: "uint256", indexed: true },
   { name: "winner", internalType: "address", type: "address", indexed: true }
  ],
  name: "WagerWithdrawal"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "APPLY_FEES",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "GAME_CONTROLLER_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "NAME",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "TYPE",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "UPGRADE_INTERFACE_VERSION",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "VERSION",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "WEGA_PROTOCOL_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "addWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "addWegaProtocolAdmins",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "closeWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "player", internalType: "address", type: "address" }
  ],
  name: "containsPlayer",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "tokenAddress", internalType: "address", type: "address" },
   { name: "account", internalType: "address", type: "address" },
   { name: "requiredPlayerNum", internalType: "uint256", type: "uint256" },
   { name: "wagerAmount", internalType: "uint256", type: "uint256" }
  ],
  name: "createWagerRequest",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" },
   { name: "wagerAmount", internalType: "uint256", type: "uint256" }
  ],
  name: "deposit",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "depositOf",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "role", internalType: "bytes32", type: "bytes32" }],
  name: "getRoleAdmin",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "escrowHash", internalType: "bytes32", type: "bytes32" }],
  name: "getWagerRequest",
  outputs: [
   {
    name: "",
    internalType: "struct IEscrow.ERC20WagerRequest",
    type: "tuple",
    components: [
     { name: "state", internalType: "enum IEscrow.TransactionState", type: "uint8" },
     { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
     { name: "wagerAmount", internalType: "uint256", type: "uint256" },
     { name: "tokenAddress", internalType: "address", type: "address" },
     { name: "totalWager", internalType: "uint256", type: "uint256" },
     { name: "nonce", internalType: "uint256", type: "uint256" }
    ]
   }
  ]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "getWagerRequests",
  outputs: [
   {
    name: "",
    internalType: "struct IEscrow.ERC20WagerRequest[]",
    type: "tuple[]",
    components: [
     { name: "state", internalType: "enum IEscrow.TransactionState", type: "uint8" },
     { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
     { name: "wagerAmount", internalType: "uint256", type: "uint256" },
     { name: "tokenAddress", internalType: "address", type: "address" },
     { name: "totalWager", internalType: "uint256", type: "uint256" },
     { name: "nonce", internalType: "uint256", type: "uint256" }
    ]
   }
  ]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "grantRole",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "hasRole",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "pure",
  type: "function",
  inputs: [
   { name: "token", internalType: "address", type: "address" },
   { name: "creator", internalType: "address", type: "address" },
   { name: "requiredPlayerNum", internalType: "uint256", type: "uint256" },
   { name: "wager", internalType: "uint256", type: "uint256" },
   { name: "nonce", internalType: "uint256", type: "uint256" }
  ],
  name: "hash",
  outputs: [{ name: "escrowHash_", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "feeManager", internalType: "address", type: "address" }],
  name: "initialize",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "isWegaProtocolAdmin",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "nonces",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "owner",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "proxiableUUID",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "removeWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "removeWegaProtocolAdmins",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceOwnership",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "callerConfirmation", internalType: "address", type: "address" }
  ],
  name: "renounceRole",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "revokeRole",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "rotateWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "feeManager", internalType: "address", type: "address" }],
  name: "setFeeManager",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "winners_", internalType: "address[]", type: "address[]" }
  ],
  name: "setWithdrawers",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
  name: "supportsInterface",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 { stateMutability: "nonpayable", type: "function", inputs: [], name: "toggleFees", outputs: [] },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
  name: "transferOwnership",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [
   { name: "newImplementation", internalType: "address", type: "address" },
   { name: "data", internalType: "bytes", type: "bytes" }
  ],
  name: "upgradeToAndCall",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "escrowHash", internalType: "bytes32", type: "bytes32" }],
  name: "wagerBalance",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "escrowHash", internalType: "bytes32", type: "bytes32" }],
  name: "withdraw",
  outputs: []
 }
] as const

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xCEBc6b24362cA2F4fA625d340BeF8Af4F91DB5bB)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaErc20EscrowAddress = {
 1337: "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
 80001: "0xCEBc6b24362cA2F4fA625d340BeF8Af4F91DB5bB",
 344106930: "0x0000000000000000000000000000000000000000"
} as const

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xCEBc6b24362cA2F4fA625d340BeF8Af4F91DB5bB)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaErc20EscrowConfig = {
 address: wegaErc20EscrowAddress,
 abi: wegaErc20EscrowABI
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WegaEscrowManagerRole
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const wegaEscrowManagerRoleABI = [
 { type: "error", inputs: [], name: "AccessControlBadConfirmation" },
 {
  type: "error",
  inputs: [
   { name: "account", internalType: "address", type: "address" },
   { name: "neededRole", internalType: "bytes32", type: "bytes32" }
  ],
  name: "AccessControlUnauthorizedAccount"
 },
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "error",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "OwnableInvalidOwner"
 },
 {
  type: "error",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "OwnableUnauthorizedAccount"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "previousOwner", internalType: "address", type: "address", indexed: true },
   { name: "newOwner", internalType: "address", type: "address", indexed: true }
  ],
  name: "OwnershipTransferred"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "previousAdminRole", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "newAdminRole", internalType: "bytes32", type: "bytes32", indexed: true }
  ],
  name: "RoleAdminChanged"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleGranted"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleRevoked"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "WEGA_ESCROW_MANAGER_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "addWegaEscrowManager",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "addWegaEscrowManagers",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "closeWegaEscrowManager",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "role", internalType: "bytes32", type: "bytes32" }],
  name: "getRoleAdmin",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "grantRole",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "hasRole",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "isWegaEscrowManager",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "owner",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "removeWegaEscrowManager",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "removeWegaEscrowManagers",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceOwnership",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "callerConfirmation", internalType: "address", type: "address" }
  ],
  name: "renounceRole",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceWegaEscrowManager",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "revokeRole",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "rotateWegaEscrowManager",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
  name: "supportsInterface",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
  name: "transferOwnership",
  outputs: []
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WegaFeeAdminRole
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const wegaFeeAdminRoleABI = [
 { type: "error", inputs: [], name: "AccessControlBadConfirmation" },
 {
  type: "error",
  inputs: [
   { name: "account", internalType: "address", type: "address" },
   { name: "neededRole", internalType: "bytes32", type: "bytes32" }
  ],
  name: "AccessControlUnauthorizedAccount"
 },
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "error",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "OwnableInvalidOwner"
 },
 {
  type: "error",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "OwnableUnauthorizedAccount"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "previousOwner", internalType: "address", type: "address", indexed: true },
   { name: "newOwner", internalType: "address", type: "address", indexed: true }
  ],
  name: "OwnershipTransferred"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "previousAdminRole", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "newAdminRole", internalType: "bytes32", type: "bytes32", indexed: true }
  ],
  name: "RoleAdminChanged"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleGranted"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleRevoked"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "WEGA_FEE_MANAGER_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "addWegaFeeAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "addWegaFeeAdmins",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "closeWegaFeeAdmin",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "role", internalType: "bytes32", type: "bytes32" }],
  name: "getRoleAdmin",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "grantRole",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "hasRole",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "isWegaFeeAdmin",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "owner",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "removeWegaFeeAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "removeWegaFeeAdmins",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceOwnership",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "callerConfirmation", internalType: "address", type: "address" }
  ],
  name: "renounceRole",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceWegaFeeAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "revokeRole",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "rotateWegaFeeAdmin",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
  name: "supportsInterface",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
  name: "transferOwnership",
  outputs: []
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WegaGameController
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xe4da6EE02D91b7C03DB000B9295A815D6BEeC4ca)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaGameControllerABI = [
 { type: "error", inputs: [], name: "AccessControlBadConfirmation" },
 {
  type: "error",
  inputs: [
   { name: "account", internalType: "address", type: "address" },
   { name: "neededRole", internalType: "bytes32", type: "bytes32" }
  ],
  name: "AccessControlUnauthorizedAccount"
 },
 {
  type: "error",
  inputs: [{ name: "target", internalType: "address", type: "address" }],
  name: "AddressEmptyCode"
 },
 {
  type: "error",
  inputs: [{ name: "implementation", internalType: "address", type: "address" }],
  name: "ERC1967InvalidImplementation"
 },
 { type: "error", inputs: [], name: "ERC1967NonPayable" },
 { type: "error", inputs: [], name: "FailedInnerCall" },
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "error",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "OwnableInvalidOwner"
 },
 {
  type: "error",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "OwnableUnauthorizedAccount"
 },
 { type: "error", inputs: [], name: "UUPSUnauthorizedCallContext" },
 {
  type: "error",
  inputs: [{ name: "slot", internalType: "bytes32", type: "bytes32" }],
  name: "UUPSUnsupportedProxiableUUID"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "nonce", internalType: "uint256", type: "uint256", indexed: true },
   { name: "creator", internalType: "address", type: "address", indexed: false },
   { name: "name", internalType: "string", type: "string", indexed: false }
  ],
  name: "GameCreation"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "name", internalType: "string", type: "string", indexed: false },
   { name: "gameAddress", internalType: "address", type: "address", indexed: false }
  ],
  name: "GameRegistration"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "previousOwner", internalType: "address", type: "address", indexed: true },
   { name: "newOwner", internalType: "address", type: "address", indexed: true }
  ],
  name: "OwnershipTransferred"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "previousAdminRole", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "newAdminRole", internalType: "bytes32", type: "bytes32", indexed: true }
  ],
  name: "RoleAdminChanged"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleGranted"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleRevoked"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "name", internalType: "string", type: "string", indexed: false },
   { name: "denominator", internalType: "uint256", type: "uint256", indexed: false },
   { name: "minRounds", internalType: "uint256", type: "uint256", indexed: false },
   { name: "requiredPlayers", internalType: "uint256", type: "uint256", indexed: false },
   { name: "proxy", internalType: "address", type: "address", indexed: false },
   { name: "randomNumberController", internalType: "address", type: "address", indexed: false }
  ],
  name: "SetGame"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "implementation", internalType: "address", type: "address", indexed: true }],
  name: "Upgraded"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "winners", internalType: "address[]", type: "address[]", indexed: true }
  ],
  name: "WinnerDeclaration"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "UPGRADE_INTERFACE_VERSION",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "WEGA_PROTOCOL_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "erc20EscrowAddress", internalType: "address", type: "address" },
   {
    name: "gameSettings",
    internalType: "struct IWegaGameController.GameSettings[]",
    type: "tuple[]",
    components: [
     { name: "denominator", internalType: "uint256", type: "uint256" },
     { name: "minRounds", internalType: "uint256", type: "uint256" },
     { name: "requiredPlayers", internalType: "uint256", type: "uint256" },
     { name: "proxy", internalType: "address", type: "address" },
     { name: "randomNumberController", internalType: "address", type: "address" },
     { name: "name", internalType: "string", type: "string" }
    ]
   }
  ],
  name: "__WegaController_init",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "erc20EscrowAddress", internalType: "address", type: "address" },
   {
    name: "gameSettings",
    internalType: "struct IWegaGameController.GameSettings[]",
    type: "tuple[]",
    components: [
     { name: "denominator", internalType: "uint256", type: "uint256" },
     { name: "minRounds", internalType: "uint256", type: "uint256" },
     { name: "requiredPlayers", internalType: "uint256", type: "uint256" },
     { name: "proxy", internalType: "address", type: "address" },
     { name: "randomNumberController", internalType: "address", type: "address" },
     { name: "name", internalType: "string", type: "string" }
    ]
   }
  ],
  name: "__WegaController_init_unchained",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "addWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "addWegaProtocolAdmins",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "closeWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "name", internalType: "string", type: "string" },
   { name: "tokenAddress", internalType: "address", type: "address" },
   { name: "wagerAmount", internalType: "uint256", type: "uint256" },
   { name: "randomNumbers", internalType: "uint256[]", type: "uint256[]" }
  ],
  name: "createGame",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "randomNumbers", internalType: "uint256[]", type: "uint256[]" }
  ],
  name: "depositOrPlay",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "playerChoices", internalType: "uint256[]", type: "uint256[]" },
   { name: "randomNumbers", internalType: "uint256[]", type: "uint256[]" }
  ],
  name: "depositOrPlay",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "erc20Escrow",
  outputs: [{ name: "", internalType: "contract IWegaERC20Escrow", type: "address" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "game", internalType: "string", type: "string" }],
  name: "existsGame",
  outputs: [{ name: "exists", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "game", internalType: "string", type: "string" },
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "player", internalType: "address", type: "address" }
  ],
  name: "gameResults",
  outputs: [{ name: "", internalType: "uint256[]", type: "uint256[]" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "escrowHash", internalType: "bytes32", type: "bytes32" }],
  name: "getGame",
  outputs: [
   {
    name: "",
    internalType: "struct IWega.Wega",
    type: "tuple",
    components: [
     { name: "name", internalType: "string", type: "string" },
     { name: "currentPlayers", internalType: "address[]", type: "address[]" },
     { name: "deposited", internalType: "uint256", type: "uint256" },
     { name: "state", internalType: "enum IWega.WegaState", type: "uint8" }
    ]
   }
  ]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "game", internalType: "string", type: "string" }],
  name: "getGameSettings",
  outputs: [
   {
    name: "settings",
    internalType: "struct IWegaGameController.GameSettings",
    type: "tuple",
    components: [
     { name: "denominator", internalType: "uint256", type: "uint256" },
     { name: "minRounds", internalType: "uint256", type: "uint256" },
     { name: "requiredPlayers", internalType: "uint256", type: "uint256" },
     { name: "proxy", internalType: "address", type: "address" },
     { name: "randomNumberController", internalType: "address", type: "address" },
     { name: "name", internalType: "string", type: "string" }
    ]
   }
  ]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "role", internalType: "bytes32", type: "bytes32" }],
  name: "getRoleAdmin",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "grantRole",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "hasRole",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "erc20EscrowAddress", internalType: "address", type: "address" },
   { name: "randomizerController_", internalType: "address", type: "address" },
   {
    name: "gameSettings",
    internalType: "struct IWegaGameController.GameSettings[]",
    type: "tuple[]",
    components: [
     { name: "denominator", internalType: "uint256", type: "uint256" },
     { name: "minRounds", internalType: "uint256", type: "uint256" },
     { name: "requiredPlayers", internalType: "uint256", type: "uint256" },
     { name: "proxy", internalType: "address", type: "address" },
     { name: "randomNumberController", internalType: "address", type: "address" },
     { name: "name", internalType: "string", type: "string" }
    ]
   }
  ],
  name: "initialize",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "isWegaProtocolAdmin",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "owner",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "game", internalType: "string", type: "string" },
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" },
   { name: "player", internalType: "address", type: "address" }
  ],
  name: "playerScore",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "escrowHash", internalType: "bytes32", type: "bytes32" }],
  name: "players",
  outputs: [{ name: "", internalType: "address[]", type: "address[]" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "proxiableUUID",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "randomizerController",
  outputs: [{ name: "", internalType: "contract IWegaRandomizerController", type: "address" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   {
    name: "config",
    internalType: "struct IWegaGameController.GameSettings",
    type: "tuple",
    components: [
     { name: "denominator", internalType: "uint256", type: "uint256" },
     { name: "minRounds", internalType: "uint256", type: "uint256" },
     { name: "requiredPlayers", internalType: "uint256", type: "uint256" },
     { name: "proxy", internalType: "address", type: "address" },
     { name: "randomNumberController", internalType: "address", type: "address" },
     { name: "name", internalType: "string", type: "string" }
    ]
   }
  ],
  name: "registerGame",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "game", internalType: "string", type: "string" }],
  name: "removeGame",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "removeWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "removeWegaProtocolAdmins",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceOwnership",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "callerConfirmation", internalType: "address", type: "address" }
  ],
  name: "renounceRole",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "revokeRole",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "rotateWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   {
    name: "config",
    internalType: "struct IWegaGameController.GameSettings",
    type: "tuple",
    components: [
     { name: "denominator", internalType: "uint256", type: "uint256" },
     { name: "minRounds", internalType: "uint256", type: "uint256" },
     { name: "requiredPlayers", internalType: "uint256", type: "uint256" },
     { name: "proxy", internalType: "address", type: "address" },
     { name: "randomNumberController", internalType: "address", type: "address" },
     { name: "name", internalType: "string", type: "string" }
    ]
   }
  ],
  name: "setGameConfiguration",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
  name: "supportsInterface",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
  name: "transferOwnership",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [
   { name: "newImplementation", internalType: "address", type: "address" },
   { name: "data", internalType: "bytes", type: "bytes" }
  ],
  name: "upgradeToAndCall",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "game", internalType: "string", type: "string" },
   { name: "escrowHash", internalType: "bytes32", type: "bytes32" }
  ],
  name: "winners",
  outputs: [{ name: "", internalType: "address[]", type: "address[]" }]
 }
] as const

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xe4da6EE02D91b7C03DB000B9295A815D6BEeC4ca)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaGameControllerAddress = {
 1337: "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
 80001: "0xe4da6EE02D91b7C03DB000B9295A815D6BEeC4ca",
 344106930: "0x0000000000000000000000000000000000000000"
} as const

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xe4da6EE02D91b7C03DB000B9295A815D6BEeC4ca)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaGameControllerConfig = {
 address: wegaGameControllerAddress,
 abi: wegaGameControllerABI
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WegaGameManagerRole
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const wegaGameManagerRoleABI = [
 { type: "error", inputs: [], name: "AccessControlBadConfirmation" },
 {
  type: "error",
  inputs: [
   { name: "account", internalType: "address", type: "address" },
   { name: "neededRole", internalType: "bytes32", type: "bytes32" }
  ],
  name: "AccessControlUnauthorizedAccount"
 },
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "error",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "OwnableInvalidOwner"
 },
 {
  type: "error",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "OwnableUnauthorizedAccount"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "previousOwner", internalType: "address", type: "address", indexed: true },
   { name: "newOwner", internalType: "address", type: "address", indexed: true }
  ],
  name: "OwnershipTransferred"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "previousAdminRole", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "newAdminRole", internalType: "bytes32", type: "bytes32", indexed: true }
  ],
  name: "RoleAdminChanged"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleGranted"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleRevoked"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "WEGA_GAME_MANAGER_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "addWegaGameManager",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "addWegaGameManagers",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "closeWegaGameManager",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "role", internalType: "bytes32", type: "bytes32" }],
  name: "getRoleAdmin",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "grantRole",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "hasRole",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "isWegaGameManager",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "owner",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "removeWegaGameManager",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "removeWegaGameManagers",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceOwnership",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "callerConfirmation", internalType: "address", type: "address" }
  ],
  name: "renounceRole",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceWegaGameManager",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "revokeRole",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "rotateWegaGameManager",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
  name: "supportsInterface",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
  name: "transferOwnership",
  outputs: []
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WegaProtocolAdminRole
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const wegaProtocolAdminRoleABI = [
 { type: "error", inputs: [], name: "AccessControlBadConfirmation" },
 {
  type: "error",
  inputs: [
   { name: "account", internalType: "address", type: "address" },
   { name: "neededRole", internalType: "bytes32", type: "bytes32" }
  ],
  name: "AccessControlUnauthorizedAccount"
 },
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "error",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "OwnableInvalidOwner"
 },
 {
  type: "error",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "OwnableUnauthorizedAccount"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "previousOwner", internalType: "address", type: "address", indexed: true },
   { name: "newOwner", internalType: "address", type: "address", indexed: true }
  ],
  name: "OwnershipTransferred"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "previousAdminRole", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "newAdminRole", internalType: "bytes32", type: "bytes32", indexed: true }
  ],
  name: "RoleAdminChanged"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleGranted"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleRevoked"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "WEGA_PROTOCOL_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "addWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "addWegaProtocolAdmins",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "closeWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "role", internalType: "bytes32", type: "bytes32" }],
  name: "getRoleAdmin",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "grantRole",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "hasRole",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "isWegaProtocolAdmin",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "owner",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "removeWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "removeWegaProtocolAdmins",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceOwnership",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "callerConfirmation", internalType: "address", type: "address" }
  ],
  name: "renounceRole",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "revokeRole",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "rotateWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
  name: "supportsInterface",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
  name: "transferOwnership",
  outputs: []
 }
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WegaRandomizer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x0000000000000000000000000000000000000000)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaRandomizerABI = [
 {
  stateMutability: "nonpayable",
  type: "constructor",
  inputs: [{ name: "randomNumbers", internalType: "uint256[]", type: "uint256[]" }]
 },
 {
  type: "error",
  inputs: [{ name: "key", internalType: "bytes32", type: "bytes32" }],
  name: "EnumerableMapNonexistentKey"
 },
 {
  type: "error",
  inputs: [
   { name: "account", internalType: "address", type: "address" },
   { name: "currentNonce", internalType: "uint256", type: "uint256" }
  ],
  name: "InvalidAccountNonce"
 },
 {
  type: "error",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "OwnableInvalidOwner"
 },
 {
  type: "error",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "OwnableUnauthorizedAccount"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "previousOwner", internalType: "address", type: "address", indexed: true },
   { name: "newOwner", internalType: "address", type: "address", indexed: true }
  ],
  name: "OwnershipTransferred"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "nonces",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "owner",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "randomNumbersCount",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceOwnership",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "retrieve",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "randomNumbers", internalType: "uint256[]", type: "uint256[]" }],
  name: "seed",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
  name: "transferOwnership",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "useOwnerNonce",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 }
] as const

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x0000000000000000000000000000000000000000)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaRandomizerAddress = {
 1337: "0x0000000000000000000000000000000000000000",
 80001: "0x0000000000000000000000000000000000000000",
 344106930: "0x0000000000000000000000000000000000000000"
} as const

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x0000000000000000000000000000000000000000)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaRandomizerConfig = {
 address: wegaRandomizerAddress,
 abi: wegaRandomizerABI
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WegaRandomizerController
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xcd44090c1BC8DC05298540488ca6FA058d27Ac70)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaRandomizerControllerABI = [
 { type: "error", inputs: [], name: "AccessControlBadConfirmation" },
 {
  type: "error",
  inputs: [
   { name: "account", internalType: "address", type: "address" },
   { name: "neededRole", internalType: "bytes32", type: "bytes32" }
  ],
  name: "AccessControlUnauthorizedAccount"
 },
 {
  type: "error",
  inputs: [{ name: "target", internalType: "address", type: "address" }],
  name: "AddressEmptyCode"
 },
 {
  type: "error",
  inputs: [{ name: "implementation", internalType: "address", type: "address" }],
  name: "ERC1967InvalidImplementation"
 },
 { type: "error", inputs: [], name: "ERC1967NonPayable" },
 { type: "error", inputs: [], name: "FailedInnerCall" },
 { type: "error", inputs: [], name: "InvalidInitialization" },
 { type: "error", inputs: [], name: "NotInitializing" },
 {
  type: "error",
  inputs: [{ name: "owner", internalType: "address", type: "address" }],
  name: "OwnableInvalidOwner"
 },
 {
  type: "error",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "OwnableUnauthorizedAccount"
 },
 { type: "error", inputs: [], name: "UUPSUnauthorizedCallContext" },
 {
  type: "error",
  inputs: [{ name: "slot", internalType: "bytes32", type: "bytes32" }],
  name: "UUPSUnsupportedProxiableUUID"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "version", internalType: "uint64", type: "uint64", indexed: false }],
  name: "Initialized"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "previousOwner", internalType: "address", type: "address", indexed: true },
   { name: "newOwner", internalType: "address", type: "address", indexed: true }
  ],
  name: "OwnershipTransferred"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "newRandomizer", internalType: "address", type: "address", indexed: true }],
  name: "RandomizerSet"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "previousAdminRole", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "newAdminRole", internalType: "bytes32", type: "bytes32", indexed: true }
  ],
  name: "RoleAdminChanged"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleGranted"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32", indexed: true },
   { name: "account", internalType: "address", type: "address", indexed: true },
   { name: "sender", internalType: "address", type: "address", indexed: true }
  ],
  name: "RoleRevoked"
 },
 {
  type: "event",
  anonymous: false,
  inputs: [{ name: "implementation", internalType: "address", type: "address", indexed: true }],
  name: "Upgraded"
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "GAME_CONTROLLER_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "GAME_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "RANDOMIZER",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "UPGRADE_INTERFACE_VERSION",
  outputs: [{ name: "", internalType: "string", type: "string" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "WEGA_PROTOCOL_ADMIN_ROLE",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "addWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "addWegaProtocolAdmins",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "closeWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "denominator", internalType: "uint256", type: "uint256" }],
  name: "generate",
  outputs: [{ name: "", internalType: "uint256", type: "uint256" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "getRandomizer",
  outputs: [{ name: "randomizer", internalType: "contract IWegaRandomizer", type: "address" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "role", internalType: "bytes32", type: "bytes32" }],
  name: "getRoleAdmin",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "grantRole",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "hasRole",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "incrementControllerNonce",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "randomNumbers", internalType: "uint256[]", type: "uint256[]" }],
  name: "initialize",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "isWegaProtocolAdmin",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "owner",
  outputs: [{ name: "", internalType: "address", type: "address" }]
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [],
  name: "proxiableUUID",
  outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "account", internalType: "address", type: "address" }],
  name: "removeWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "accounts", internalType: "address[]", type: "address[]" }],
  name: "removeWegaProtocolAdmins",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceOwnership",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "callerConfirmation", internalType: "address", type: "address" }
  ],
  name: "renounceRole",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [],
  name: "renounceWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [
   { name: "role", internalType: "bytes32", type: "bytes32" },
   { name: "account", internalType: "address", type: "address" }
  ],
  name: "revokeRole",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [{ name: "receiver", internalType: "address payable", type: "address" }],
  name: "rotateWegaProtocolAdmin",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "randomNumbers", internalType: "uint256[]", type: "uint256[]" }],
  name: "seedRandomizer",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "randomizer", internalType: "address", type: "address" }],
  name: "setRandomizer",
  outputs: []
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "randomNumbers", internalType: "uint256[]", type: "uint256[]" }],
  name: "spawnRandomizer",
  outputs: []
 },
 {
  stateMutability: "view",
  type: "function",
  inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
  name: "supportsInterface",
  outputs: [{ name: "", internalType: "bool", type: "bool" }]
 },
 {
  stateMutability: "nonpayable",
  type: "function",
  inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
  name: "transferOwnership",
  outputs: []
 },
 {
  stateMutability: "payable",
  type: "function",
  inputs: [
   { name: "newImplementation", internalType: "address", type: "address" },
   { name: "data", internalType: "bytes", type: "bytes" }
  ],
  name: "upgradeToAndCall",
  outputs: []
 }
] as const

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xcd44090c1BC8DC05298540488ca6FA058d27Ac70)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaRandomizerControllerAddress = {
 1337: "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
 80001: "0xcd44090c1BC8DC05298540488ca6FA058d27Ac70",
 344106930: "0x0000000000000000000000000000000000000000"
} as const

/**
 * -
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xcd44090c1BC8DC05298540488ca6FA058d27Ac70)
 * - [__View Contract on Skale Calypso Nft Hub Testnet Skale Explorer__](https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com/address/0x0000000000000000000000000000000000000000)
 */
export const wegaRandomizerControllerConfig = {
 address: wegaRandomizerControllerAddress,
 abi: wegaRandomizerControllerABI
} as const
